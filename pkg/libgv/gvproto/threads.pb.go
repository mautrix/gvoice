// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: threads.proto

package gvproto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	_ "embed"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ThreadFolder int32

const (
	ThreadFolder_UNKNOWN_THREAD_FOLDER ThreadFolder = 0
	ThreadFolder_ALL_THREADS           ThreadFolder = 1
	ThreadFolder_TEXT_THREADS          ThreadFolder = 2
	ThreadFolder_ALL_CALL_THREADS      ThreadFolder = 3 // uncertain
	ThreadFolder_ALL_VOICEMAIL_THREADS ThreadFolder = 4 // uncertain
	ThreadFolder_ALL_SPAM_THREADS      ThreadFolder = 5 // uncertain
	ThreadFolder_ALL_ARCHIVED_THREADS  ThreadFolder = 6
)

// Enum value maps for ThreadFolder.
var (
	ThreadFolder_name = map[int32]string{
		0: "UNKNOWN_THREAD_FOLDER",
		1: "ALL_THREADS",
		2: "TEXT_THREADS",
		3: "ALL_CALL_THREADS",
		4: "ALL_VOICEMAIL_THREADS",
		5: "ALL_SPAM_THREADS",
		6: "ALL_ARCHIVED_THREADS",
	}
	ThreadFolder_value = map[string]int32{
		"UNKNOWN_THREAD_FOLDER": 0,
		"ALL_THREADS":           1,
		"TEXT_THREADS":          2,
		"ALL_CALL_THREADS":      3,
		"ALL_VOICEMAIL_THREADS": 4,
		"ALL_SPAM_THREADS":      5,
		"ALL_ARCHIVED_THREADS":  6,
	}
)

func (x ThreadFolder) Enum() *ThreadFolder {
	p := new(ThreadFolder)
	*p = x
	return p
}

func (x ThreadFolder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThreadFolder) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[0].Descriptor()
}

func (ThreadFolder) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[0]
}

func (x ThreadFolder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThreadFolder.Descriptor instead.
func (ThreadFolder) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{0}
}

type ContactSpammerStatus int32

const (
	ContactSpammerStatus_UNKNOWN_CONTACT_SPAMMER_STATUS ContactSpammerStatus = 0
	ContactSpammerStatus_USER_UNMARKED_SPAM             ContactSpammerStatus = 4
)

// Enum value maps for ContactSpammerStatus.
var (
	ContactSpammerStatus_name = map[int32]string{
		0: "UNKNOWN_CONTACT_SPAMMER_STATUS",
		4: "USER_UNMARKED_SPAM",
	}
	ContactSpammerStatus_value = map[string]int32{
		"UNKNOWN_CONTACT_SPAMMER_STATUS": 0,
		"USER_UNMARKED_SPAM":             4,
	}
)

func (x ContactSpammerStatus) Enum() *ContactSpammerStatus {
	p := new(ContactSpammerStatus)
	*p = x
	return p
}

func (x ContactSpammerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactSpammerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[1].Descriptor()
}

func (ContactSpammerStatus) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[1]
}

func (x ContactSpammerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactSpammerStatus.Descriptor instead.
func (ContactSpammerStatus) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{1}
}

type Message_Type int32

const (
	Message_UNKNOWN_TYPE Message_Type = 0
	Message_SMS_IN       Message_Type = 10
	Message_SMS_OUT      Message_Type = 11
)

// Enum value maps for Message_Type.
var (
	Message_Type_name = map[int32]string{
		0:  "UNKNOWN_TYPE",
		10: "SMS_IN",
		11: "SMS_OUT",
	}
	Message_Type_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"SMS_IN":       10,
		"SMS_OUT":      11,
	}
)

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}

func (x Message_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[2].Descriptor()
}

func (Message_Type) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[2]
}

func (x Message_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Type.Descriptor instead.
func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 0}
}

type Message_CoarseType int32

const (
	Message_UNKNOWN_COARSE_TYPE Message_CoarseType = 0
	Message_CALL_TYPE_SMS_IN    Message_CoarseType = 5
	Message_CALL_TYPE_SMS_OUT   Message_CoarseType = 6
)

// Enum value maps for Message_CoarseType.
var (
	Message_CoarseType_name = map[int32]string{
		0: "UNKNOWN_COARSE_TYPE",
		5: "CALL_TYPE_SMS_IN",
		6: "CALL_TYPE_SMS_OUT",
	}
	Message_CoarseType_value = map[string]int32{
		"UNKNOWN_COARSE_TYPE": 0,
		"CALL_TYPE_SMS_IN":    5,
		"CALL_TYPE_SMS_OUT":   6,
	}
)

func (x Message_CoarseType) Enum() *Message_CoarseType {
	p := new(Message_CoarseType)
	*p = x
	return p
}

func (x Message_CoarseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_CoarseType) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[3].Descriptor()
}

func (Message_CoarseType) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[3]
}

func (x Message_CoarseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_CoarseType.Descriptor instead.
func (Message_CoarseType) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 1}
}

type Message_Status int32

const (
	Message_UNREAD Message_Status = 0
	Message_READ   Message_Status = 1
)

// Enum value maps for Message_Status.
var (
	Message_Status_name = map[int32]string{
		0: "UNREAD",
		1: "READ",
	}
	Message_Status_value = map[string]int32{
		"UNREAD": 0,
		"READ":   1,
	}
)

func (x Message_Status) Enum() *Message_Status {
	p := new(Message_Status)
	*p = x
	return p
}

func (x Message_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[4].Descriptor()
}

func (Message_Status) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[4]
}

func (x Message_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Status.Descriptor instead.
func (Message_Status) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 2}
}

type Message_TranscriptStatus int32

const (
	Message_UNKNOWN_STATUS Message_TranscriptStatus = 0
	Message_RECEIVED       Message_TranscriptStatus = 1
)

// Enum value maps for Message_TranscriptStatus.
var (
	Message_TranscriptStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "RECEIVED",
	}
	Message_TranscriptStatus_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"RECEIVED":       1,
	}
)

func (x Message_TranscriptStatus) Enum() *Message_TranscriptStatus {
	p := new(Message_TranscriptStatus)
	*p = x
	return p
}

func (x Message_TranscriptStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_TranscriptStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[5].Descriptor()
}

func (Message_TranscriptStatus) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[5]
}

func (x Message_TranscriptStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_TranscriptStatus.Descriptor instead.
func (Message_TranscriptStatus) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 3}
}

type Message_UserFeedback_Status int32

const (
	Message_UserFeedback_UNKNOWN_STATUS Message_UserFeedback_Status = 0
	Message_UserFeedback_NOT_APPLICABLE Message_UserFeedback_Status = 1
)

// Enum value maps for Message_UserFeedback_Status.
var (
	Message_UserFeedback_Status_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "NOT_APPLICABLE",
	}
	Message_UserFeedback_Status_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"NOT_APPLICABLE": 1,
	}
)

func (x Message_UserFeedback_Status) Enum() *Message_UserFeedback_Status {
	p := new(Message_UserFeedback_Status)
	*p = x
	return p
}

func (x Message_UserFeedback_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_UserFeedback_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[6].Descriptor()
}

func (Message_UserFeedback_Status) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[6]
}

func (x Message_UserFeedback_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_UserFeedback_Status.Descriptor instead.
func (Message_UserFeedback_Status) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 0, 0}
}

type Attachment_Status int32

const (
	Attachment_UNKNOWN_STATUS Attachment_Status = 0
	Attachment_AVAILABLE      Attachment_Status = 1
	Attachment_NOT_SUPPORTED  Attachment_Status = 3
)

// Enum value maps for Attachment_Status.
var (
	Attachment_Status_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "AVAILABLE",
		3: "NOT_SUPPORTED",
	}
	Attachment_Status_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"AVAILABLE":      1,
		"NOT_SUPPORTED":  3,
	}
)

func (x Attachment_Status) Enum() *Attachment_Status {
	p := new(Attachment_Status)
	*p = x
	return p
}

func (x Attachment_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attachment_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[7].Descriptor()
}

func (Attachment_Status) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[7]
}

func (x Attachment_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attachment_Status.Descriptor instead.
func (Attachment_Status) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{4, 0}
}

type Attachment_MediaType int32

const (
	Attachment_UNKNOWN_TYPE Attachment_MediaType = 0
	Attachment_PHOTO        Attachment_MediaType = 3
)

// Enum value maps for Attachment_MediaType.
var (
	Attachment_MediaType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		3: "PHOTO",
	}
	Attachment_MediaType_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"PHOTO":        3,
	}
)

func (x Attachment_MediaType) Enum() *Attachment_MediaType {
	p := new(Attachment_MediaType)
	*p = x
	return p
}

func (x Attachment_MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attachment_MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[8].Descriptor()
}

func (Attachment_MediaType) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[8]
}

func (x Attachment_MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attachment_MediaType.Descriptor instead.
func (Attachment_MediaType) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{4, 1}
}

type Attachment_Metadata_SizeSpec int32

const (
	Attachment_Metadata_UNKNOWN  Attachment_Metadata_SizeSpec = 0
	Attachment_Metadata_ORIGINAL Attachment_Metadata_SizeSpec = 1
	Attachment_Metadata_S128     Attachment_Metadata_SizeSpec = 2
	Attachment_Metadata_S512     Attachment_Metadata_SizeSpec = 3
	Attachment_Metadata_S1280    Attachment_Metadata_SizeSpec = 4
)

// Enum value maps for Attachment_Metadata_SizeSpec.
var (
	Attachment_Metadata_SizeSpec_name = map[int32]string{
		0: "UNKNOWN",
		1: "ORIGINAL",
		2: "S128",
		3: "S512",
		4: "S1280",
	}
	Attachment_Metadata_SizeSpec_value = map[string]int32{
		"UNKNOWN":  0,
		"ORIGINAL": 1,
		"S128":     2,
		"S512":     3,
		"S1280":    4,
	}
)

func (x Attachment_Metadata_SizeSpec) Enum() *Attachment_Metadata_SizeSpec {
	p := new(Attachment_Metadata_SizeSpec)
	*p = x
	return p
}

func (x Attachment_Metadata_SizeSpec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attachment_Metadata_SizeSpec) Descriptor() protoreflect.EnumDescriptor {
	return file_threads_proto_enumTypes[9].Descriptor()
}

func (Attachment_Metadata_SizeSpec) Type() protoreflect.EnumType {
	return &file_threads_proto_enumTypes[9]
}

func (x Attachment_Metadata_SizeSpec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Attachment_Metadata_SizeSpec.Descriptor instead.
func (Attachment_Metadata_SizeSpec) EnumDescriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{4, 0, 0}
}

type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                    string         `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Read                  bool           `protobuf:"varint,2,opt,name=read,proto3" json:"read,omitempty"`
	Messages              []*Message     `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	PaginationToken       string         `protobuf:"bytes,4,opt,name=paginationToken,proto3" json:"paginationToken,omitempty"`
	Contacts              []*Contact     `protobuf:"bytes,5,rep,name=contacts,proto3" json:"contacts,omitempty"`
	Folders               []ThreadFolder `protobuf:"varint,6,rep,packed,name=folders,proto3,enum=threads.ThreadFolder" json:"folders,omitempty"`
	IsText                bool           `protobuf:"varint,8,opt,name=isText,proto3" json:"isText,omitempty"`
	PhoneNumbers          []string       `protobuf:"bytes,9,rep,name=phoneNumbers,proto3" json:"phoneNumbers,omitempty"`
	SuspectedSpamContacts []*Contact     `protobuf:"bytes,12,rep,name=suspectedSpamContacts,proto3" json:"suspectedSpamContacts,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	mi := &file_threads_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{0}
}

func (x *Thread) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Thread) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *Thread) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *Thread) GetPaginationToken() string {
	if x != nil {
		return x.PaginationToken
	}
	return ""
}

func (x *Thread) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Thread) GetFolders() []ThreadFolder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *Thread) GetIsText() bool {
	if x != nil {
		return x.IsText
	}
	return false
}

func (x *Thread) GetPhoneNumbers() []string {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

func (x *Thread) GetSuspectedSpamContacts() []*Contact {
	if x != nil {
		return x.SuspectedSpamContacts
	}
	return nil
}

type ThreadAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadID             string               `protobuf:"bytes,1,opt,name=threadID,proto3" json:"threadID,omitempty"`
	IsBlocked            bool                 `protobuf:"varint,2,opt,name=isBlocked,proto3" json:"isBlocked,omitempty"`
	IsSpammer            bool                 `protobuf:"varint,3,opt,name=isSpammer,proto3" json:"isSpammer,omitempty"`
	Read                 bool                 `protobuf:"varint,4,opt,name=read,proto3" json:"read,omitempty"`
	Folders              []ThreadFolder       `protobuf:"varint,5,rep,packed,name=folders,proto3,enum=threads.ThreadFolder" json:"folders,omitempty"`
	Archived             bool                 `protobuf:"varint,6,opt,name=archived,proto3" json:"archived,omitempty"`
	GroupName            string               `protobuf:"bytes,7,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ContactSpammerStatus ContactSpammerStatus `protobuf:"varint,8,opt,name=contactSpammerStatus,proto3,enum=threads.ContactSpammerStatus" json:"contactSpammerStatus,omitempty"`
}

func (x *ThreadAttributes) Reset() {
	*x = ThreadAttributes{}
	mi := &file_threads_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadAttributes) ProtoMessage() {}

func (x *ThreadAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadAttributes.ProtoReflect.Descriptor instead.
func (*ThreadAttributes) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{1}
}

func (x *ThreadAttributes) GetThreadID() string {
	if x != nil {
		return x.ThreadID
	}
	return ""
}

func (x *ThreadAttributes) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

func (x *ThreadAttributes) GetIsSpammer() bool {
	if x != nil {
		return x.IsSpammer
	}
	return false
}

func (x *ThreadAttributes) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *ThreadAttributes) GetFolders() []ThreadFolder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *ThreadAttributes) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *ThreadAttributes) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ThreadAttributes) GetContactSpammerStatus() ContactSpammerStatus {
	if x != nil {
		return x.ContactSpammerStatus
	}
	return ContactSpammerStatus_UNKNOWN_CONTACT_SPAMMER_STATUS
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                            string                   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Timestamp                     int64                    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DestinationID                 string                   `protobuf:"bytes,3,opt,name=destinationID,proto3" json:"destinationID,omitempty"`
	Contact                       *Contact                 `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Type                          Message_Type             `protobuf:"varint,5,opt,name=type,proto3,enum=threads.Message_Type" json:"type,omitempty"`
	Status                        Message_Status           `protobuf:"varint,6,opt,name=status,proto3,enum=threads.Message_Status" json:"status,omitempty"`
	Text                          string                   `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`
	CoarseType                    Message_CoarseType       `protobuf:"varint,13,opt,name=coarseType,proto3,enum=threads.Message_CoarseType" json:"coarseType,omitempty"`
	TranscriptStatus              Message_TranscriptStatus `protobuf:"varint,14,opt,name=transcriptStatus,proto3,enum=threads.Message_TranscriptStatus" json:"transcriptStatus,omitempty"`
	MMS                           *MMSMessage              `protobuf:"bytes,15,opt,name=MMS,proto3" json:"MMS,omitempty"`
	PhoneNumberKeyToThreadContact string                   `protobuf:"bytes,16,opt,name=phoneNumberKeyToThreadContact,proto3" json:"phoneNumberKeyToThreadContact,omitempty"`
	IsArtificialErrorMessage      bool                     `protobuf:"varint,17,opt,name=isArtificialErrorMessage,proto3" json:"isArtificialErrorMessage,omitempty"`
	TransactionID                 int64                    `protobuf:"varint,18,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	UserFeedback                  *Message_UserFeedback    `protobuf:"bytes,19,opt,name=userFeedback,proto3" json:"userFeedback,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_threads_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetDestinationID() string {
	if x != nil {
		return x.DestinationID
	}
	return ""
}

func (x *Message) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Message) GetType() Message_Type {
	if x != nil {
		return x.Type
	}
	return Message_UNKNOWN_TYPE
}

func (x *Message) GetStatus() Message_Status {
	if x != nil {
		return x.Status
	}
	return Message_UNREAD
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetCoarseType() Message_CoarseType {
	if x != nil {
		return x.CoarseType
	}
	return Message_UNKNOWN_COARSE_TYPE
}

func (x *Message) GetTranscriptStatus() Message_TranscriptStatus {
	if x != nil {
		return x.TranscriptStatus
	}
	return Message_UNKNOWN_STATUS
}

func (x *Message) GetMMS() *MMSMessage {
	if x != nil {
		return x.MMS
	}
	return nil
}

func (x *Message) GetPhoneNumberKeyToThreadContact() string {
	if x != nil {
		return x.PhoneNumberKeyToThreadContact
	}
	return ""
}

func (x *Message) GetIsArtificialErrorMessage() bool {
	if x != nil {
		return x.IsArtificialErrorMessage
	}
	return false
}

func (x *Message) GetTransactionID() int64 {
	if x != nil {
		return x.TransactionID
	}
	return 0
}

func (x *Message) GetUserFeedback() *Message_UserFeedback {
	if x != nil {
		return x.UserFeedback
	}
	return nil
}

type MMSMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text                          string        `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Subject                       string        `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Attachments                   []*Attachment `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Participants                  []*Contact    `protobuf:"bytes,4,rep,name=participants,proto3" json:"participants,omitempty"`
	SenderPhoneNumber             string        `protobuf:"bytes,5,opt,name=senderPhoneNumber,proto3" json:"senderPhoneNumber,omitempty"`
	PhoneNumberKeyToThreadContact []string      `protobuf:"bytes,6,rep,name=phoneNumberKeyToThreadContact,proto3" json:"phoneNumberKeyToThreadContact,omitempty"`
}

func (x *MMSMessage) Reset() {
	*x = MMSMessage{}
	mi := &file_threads_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MMSMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MMSMessage) ProtoMessage() {}

func (x *MMSMessage) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MMSMessage.ProtoReflect.Descriptor instead.
func (*MMSMessage) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{3}
}

func (x *MMSMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MMSMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MMSMessage) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *MMSMessage) GetParticipants() []*Contact {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *MMSMessage) GetSenderPhoneNumber() string {
	if x != nil {
		return x.SenderPhoneNumber
	}
	return ""
}

func (x *MMSMessage) GetPhoneNumberKeyToThreadContact() []string {
	if x != nil {
		return x.PhoneNumberKeyToThreadContact
	}
	return nil
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType  string                 `protobuf:"bytes,1,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	ID        string                 `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Status    Attachment_Status      `protobuf:"varint,3,opt,name=status,proto3,enum=threads.Attachment_Status" json:"status,omitempty"`
	Metadata  []*Attachment_Metadata `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty"`
	MediaType Attachment_MediaType   `protobuf:"varint,5,opt,name=mediaType,proto3,enum=threads.Attachment_MediaType" json:"mediaType,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_threads_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{4}
}

func (x *Attachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Attachment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Attachment) GetStatus() Attachment_Status {
	if x != nil {
		return x.Status
	}
	return Attachment_UNKNOWN_STATUS
}

func (x *Attachment) GetMetadata() []*Attachment_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Attachment) GetMediaType() Attachment_MediaType {
	if x != nil {
		return x.MediaType
	}
	return Attachment_UNKNOWN_TYPE
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Blocked     bool   `protobuf:"varint,7,opt,name=blocked,proto3" json:"blocked,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_threads_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{5}
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Contact) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

type Message_UserFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Message_UserFeedback_Status `protobuf:"varint,2,opt,name=status,proto3,enum=threads.Message_UserFeedback_Status" json:"status,omitempty"`
}

func (x *Message_UserFeedback) Reset() {
	*x = Message_UserFeedback{}
	mi := &file_threads_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message_UserFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message_UserFeedback) ProtoMessage() {}

func (x *Message_UserFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message_UserFeedback.ProtoReflect.Descriptor instead.
func (*Message_UserFeedback) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Message_UserFeedback) GetStatus() Message_UserFeedback_Status {
	if x != nil {
		return x.Status
	}
	return Message_UserFeedback_UNKNOWN_STATUS
}

type Attachment_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   Attachment_Metadata_SizeSpec `protobuf:"varint,1,opt,name=size,proto3,enum=threads.Attachment_Metadata_SizeSpec" json:"size,omitempty"`
	Width  int32                        `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int32                        `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Attachment_Metadata) Reset() {
	*x = Attachment_Metadata{}
	mi := &file_threads_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment_Metadata) ProtoMessage() {}

func (x *Attachment_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_threads_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment_Metadata.ProtoReflect.Descriptor instead.
func (*Attachment_Metadata) Descriptor() ([]byte, []int) {
	return file_threads_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Attachment_Metadata) GetSize() Attachment_Metadata_SizeSpec {
	if x != nil {
		return x.Size
	}
	return Attachment_Metadata_UNKNOWN
}

func (x *Attachment_Metadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Attachment_Metadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_threads_proto protoreflect.FileDescriptor

//go:embed threads.pb.raw
var file_threads_proto_rawDesc []byte

var (
	file_threads_proto_rawDescOnce sync.Once
	file_threads_proto_rawDescData = file_threads_proto_rawDesc
)

func file_threads_proto_rawDescGZIP() []byte {
	file_threads_proto_rawDescOnce.Do(func() {
		file_threads_proto_rawDescData = protoimpl.X.CompressGZIP(file_threads_proto_rawDescData)
	})
	return file_threads_proto_rawDescData
}

var file_threads_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_threads_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_threads_proto_goTypes = []any{
	(ThreadFolder)(0),                 // 0: threads.ThreadFolder
	(ContactSpammerStatus)(0),         // 1: threads.ContactSpammerStatus
	(Message_Type)(0),                 // 2: threads.Message.Type
	(Message_CoarseType)(0),           // 3: threads.Message.CoarseType
	(Message_Status)(0),               // 4: threads.Message.Status
	(Message_TranscriptStatus)(0),     // 5: threads.Message.TranscriptStatus
	(Message_UserFeedback_Status)(0),  // 6: threads.Message.UserFeedback.Status
	(Attachment_Status)(0),            // 7: threads.Attachment.Status
	(Attachment_MediaType)(0),         // 8: threads.Attachment.MediaType
	(Attachment_Metadata_SizeSpec)(0), // 9: threads.Attachment.Metadata.SizeSpec
	(*Thread)(nil),                    // 10: threads.Thread
	(*ThreadAttributes)(nil),          // 11: threads.ThreadAttributes
	(*Message)(nil),                   // 12: threads.Message
	(*MMSMessage)(nil),                // 13: threads.MMSMessage
	(*Attachment)(nil),                // 14: threads.Attachment
	(*Contact)(nil),                   // 15: threads.Contact
	(*Message_UserFeedback)(nil),      // 16: threads.Message.UserFeedback
	(*Attachment_Metadata)(nil),       // 17: threads.Attachment.Metadata
}
var file_threads_proto_depIdxs = []int32{
	12, // 0: threads.Thread.messages:type_name -> threads.Message
	15, // 1: threads.Thread.contacts:type_name -> threads.Contact
	0,  // 2: threads.Thread.folders:type_name -> threads.ThreadFolder
	15, // 3: threads.Thread.suspectedSpamContacts:type_name -> threads.Contact
	0,  // 4: threads.ThreadAttributes.folders:type_name -> threads.ThreadFolder
	1,  // 5: threads.ThreadAttributes.contactSpammerStatus:type_name -> threads.ContactSpammerStatus
	15, // 6: threads.Message.contact:type_name -> threads.Contact
	2,  // 7: threads.Message.type:type_name -> threads.Message.Type
	4,  // 8: threads.Message.status:type_name -> threads.Message.Status
	3,  // 9: threads.Message.coarseType:type_name -> threads.Message.CoarseType
	5,  // 10: threads.Message.transcriptStatus:type_name -> threads.Message.TranscriptStatus
	13, // 11: threads.Message.MMS:type_name -> threads.MMSMessage
	16, // 12: threads.Message.userFeedback:type_name -> threads.Message.UserFeedback
	14, // 13: threads.MMSMessage.attachments:type_name -> threads.Attachment
	15, // 14: threads.MMSMessage.participants:type_name -> threads.Contact
	7,  // 15: threads.Attachment.status:type_name -> threads.Attachment.Status
	17, // 16: threads.Attachment.metadata:type_name -> threads.Attachment.Metadata
	8,  // 17: threads.Attachment.mediaType:type_name -> threads.Attachment.MediaType
	6,  // 18: threads.Message.UserFeedback.status:type_name -> threads.Message.UserFeedback.Status
	9,  // 19: threads.Attachment.Metadata.size:type_name -> threads.Attachment.Metadata.SizeSpec
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_threads_proto_init() }
func file_threads_proto_init() {
	if File_threads_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_threads_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_threads_proto_goTypes,
		DependencyIndexes: file_threads_proto_depIdxs,
		EnumInfos:         file_threads_proto_enumTypes,
		MessageInfos:      file_threads_proto_msgTypes,
	}.Build()
	File_threads_proto = out.File
	file_threads_proto_rawDesc = nil
	file_threads_proto_goTypes = nil
	file_threads_proto_depIdxs = nil
}
